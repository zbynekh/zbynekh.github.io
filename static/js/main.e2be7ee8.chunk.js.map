{"version":3,"sources":["assets/icons.svg","assets/streetview-not-found.png","constants/config.ts","constants/mapConfig.ts","components/CustomMarker.tsx","models/ServiceCategoryMap.ts","utils/searchUtils.ts","components/Map.tsx","constants/actionTypes.ts","models/WelfareCentre.ts","kentico/deliveryClient.ts","repositories/welfareCentreRepository.ts","actions/thunkActions.ts","actions/thunks/appInit.ts","actions/thunks/searchConfirmed.ts","actions/thunks/selectWelfareCentre.ts","containers/Map.tsx","utils/general/generalUtilities.ts","utils/renderUtils.tsx","components/FullTextSearch.tsx","utils/general/debounce.ts","components/CategorySearch.tsx","utils/categoryUtils.ts","components/Search.tsx","actions/searchFocused.ts","containers/Search.tsx","utils/general/textUtils.ts","components/WelfareCentreDetails.tsx","utils/general/urlUtils.ts","components/SideBar.tsx","containers/SideBar.tsx","components/App.tsx","containers/App.tsx","stores/initialState.ts","reducers/rootReducer.ts","reducers/filteredWelfareCentres.ts","reducers/loadedWelfareCentres.ts","reducers/selectedWelfareCentre.ts","utils/general/bootstrap.ts","index.tsx"],"names":["module","exports","__webpack_require__","p","GoogleMapsApiKey","GoogleMapsUrl","concat","GoogleStreetViewUrl","GoogleStreetViewMetadataUrl","DefaultCenter","lat","lng","DefaultZoom","CustomMarker","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","_onMarkerClick","event","props","onClick","id","latLng","inherits","createClass","key","value","_this$props","name","showLabels","react_default","a","createElement","MarkerWithLabel_default","labelAnchor","google","maps","Point","labelClass","position","title","Component","displayName","ServiceCategoryMap","Map","filterWelfareCentres","welfareCentres","searchPhrase","searchParams","getSearchParamsFromSearchPhrase","centresByCategory","categoryKey","filter","centre","containsServiceCategory","serviceCategories","fullText","fuseOptions","keys","maxPatternLength","threshold","Fuse","search","forEach","startsWith","categoryValue","get","replace","some","category","codename","_PureComponent","_mapComponent","onWelfareCentreSelected","panTo","_onZoomChanged","setState","currentZoom","getZoom","_fitBoundsToVisibleMarkers","bounds","LatLngBounds","loc","LatLng","gpsLatitude","gpsLongitude","extend","fitBounds","state","currentLocation","_this2","navigator","geolocation","getCurrentPosition","coords","latitude","longitude","_tryGetCurrentLocation","prevProps","centresInCurrentLocation","contains","getWelfareCentresWithinBounds","getBounds","centresToZoom","_this3","_this$state","lib","center","defaultCenter","defaultZoom","onZoomChanged","options","fullscreenControl","mapTypeControlOptions","ControlPosition","TOP_RIGHT","maxZoom","ref","c","zoom","MarkerClusterer_default","averageCenter","enableRetinaIcons","gridSize","map","CustomMarker_CustomMarker","system","PureComponent","App_Init_Finished","App_Search_Confirmed","App_Search_Focused","App_WelfareCentre_Selected","WelfareCentre","_ContentItem","propertyResolver","fieldName","serviceDescription","openingHours","street","city","zip","phone","web","ContentItem","deliveryClient","DeliveryClient","projectId","typeResolvers","TypeResolver","welfareCentreRepository","items","type","elementsParameter","getPromise","item","appInit","_ref","asyncToGenerator","regenerator_default","mark","_callee","dispatch","wrap","_context","prev","next","sent","payload","loadedWelfareCentres","stop","_x","searchConfirmed","getState","_getState","filteredWelfareCentres","_x2","selectWelfareCentre","selectedWelfareCentre","welfareCentre","withScriptjs","withGoogleMap","connect","MapComponent","doNothing","CancelledDelay","delay","duration","timeout","rejectCallback","cancelable","thePromise","originalThen","then","assign","cancel","clearTimeout","success","fail","Promise","resolve","reject","setTimeout","renderSvgIcon","href","useTag","dangerouslySetInnerHTML","__html","FullTextSearch","_debouncedOnSearchPhraseChanged","_onInputChange","e","_onChange","target","_onClearButtonClicked","_onFormSubmit","onSearchConfirmed","preventDefault","func","wait","context","later","latestArgs","now","isPending","debounce","onSearchPhraseChanged","prevState","propsChanged","stateChanged","propsStateSynced","className","onSubmit","maxLength","onChange","placeholder","tabIndex","icons","CategorySearch","categories","push","onCategorySelected","_renderCategories","Search","_onCategorySelected","selectedCategoryKey","selectedWelfareCentreName","translatedSearchPhrase","onFocus","FullTextSearch_FullTextSearch","onSearch","CategorySearch_CategorySearch","undefined","SearchComponent","stripHtml","htmlString","isEmptyOrWhitespace","trim","WelfareCentreDetails","_tryLoadStreetViewImage","encodedLocation","encodeURI","streetViewMetadataUrl","streetViewImageUrl","ajax","subscribe","response","status","url","description","src","streetViewNotFound","alt","getHtml","test","startsWithProtocol","SideBar","containers_Search_Search","WelfareCentreDetails_WelfareCentreDetails","ownProps","SideBarComponent","App","onInit","containers_SideBar_SideBar","containers_Map_Map","googleMapURL","loadingElement","style","height","containerElement","mapElement","AppComponent","initialState","rootReducer","combineReducers","action","window","RSVP","on","reason","console","error","stack","enhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunk","reduxStore","createStore","ReactDOM","render","es","store","containers_App_App","document","getElementById"],"mappings":"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","file":"static/js/main.e2be7ee8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/icons.46b1bc8e.svg\";","module.exports = __webpack_public_path__ + \"static/media/streetview-not-found.5471f2dd.png\";","export const KenticoProjectId = '63208e4e-b4d4-00d2-78df-cfe9db943907';\r\nexport const GoogleMapsApiKey = 'AIzaSyA7RQABjPCiCvlHYTIRvFvmJP_28x-OSMA';\r\nexport const MaxSearchPatternLength = 32;\r\n","import { GoogleMapsApiKey } from './config';\r\n\r\nexport const GoogleMapsUrl = `https://maps.googleapis.com/maps/api/js?key=${GoogleMapsApiKey}&v=3.exp`;\r\nexport const GoogleStreetViewUrl = `https://maps.googleapis.com/maps/api/streetview?&key=${GoogleMapsApiKey}`;\r\nexport const GoogleStreetViewMetadataUrl = `https://maps.googleapis.com/maps/api/streetview/metadata?&key=${GoogleMapsApiKey}`;\r\nexport const DefaultCenter: LatLng = { lat: 49.8196527, lng: 16.0559093 };\r\nexport const DefaultZoom = 8;\r\nexport const ZoomForCurrentLocation = 13;\r\nexport const ClustererGridSize = 25;\r\nexport const MarkerLabelsZoomThreshold = 12;\r\n","import React, { Component } from 'react';\r\nimport MarkerWithLabel from 'react-google-maps/lib/components/addons/MarkerWithLabel';\r\n\r\nexport interface ICustomMarkerStateProps {\r\n  readonly id: string;\r\n  readonly latLng: LatLng;\r\n  readonly name: string;\r\n  readonly onClick: (id: string, latLng: google.maps.LatLng) => void;\r\n  readonly showLabels: boolean;\r\n}\r\n\r\ntype CustomMarkerProps = ICustomMarkerStateProps;\r\n\r\nexport class CustomMarker extends Component<CustomMarkerProps> {\r\n  static displayName = 'CustomMarker';\r\n\r\n  private _onMarkerClick = (event: google.maps.MouseEvent): void => {\r\n    this.props.onClick(this.props.id, event.latLng);\r\n  };\r\n\r\n  render(): JSX.Element {\r\n    const {\r\n      id,\r\n      latLng,\r\n      name,\r\n      showLabels,\r\n    } = this.props;\r\n\r\n    return (\r\n      <MarkerWithLabel\r\n        labelAnchor={new google.maps.Point(-20, 30)}\r\n        labelClass={'marker-with-label'}\r\n        onClick={this._onMarkerClick}\r\n        position={{ lat: latLng.lat, lng: latLng.lng }}\r\n        title={name}\r\n      >\r\n        <span>\r\n          {showLabels && name}\r\n        </span>\r\n      </MarkerWithLabel>\r\n    )\r\n  }\r\n}\r\n","export const ServiceCategoryMap: Map<string, string> = new Map<string, string>([\r\n  ['alcohol', 'Potíže s alkoholem'],\r\n  ['drugs', 'Potíže s drogami'],\r\n  ['crisis_services', 'Pomoc v krizi'],\r\n  ['homeless', 'Bez domova'],\r\n  ['free_time', 'Volný čas'],\r\n]);\r\n","import { WelfareCentre } from '../models/WelfareCentre';\r\nimport { ServiceCategoryMap } from '../models/ServiceCategoryMap';\r\nimport Fuse from 'fuse.js';\r\nimport { MaxSearchPatternLength } from '../constants/config';\r\n\r\ninterface ISearchParams {\r\n  readonly categoryKey: string;\r\n  readonly fullText: string;\r\n}\r\n\r\ninterface IServiceCategory {\r\n  readonly codename: string;\r\n  readonly name: string;\r\n}\r\n\r\nexport const filterWelfareCentres = (\r\n  welfareCentres: Array<WelfareCentre>,\r\n  searchPhrase: string,\r\n): Array<WelfareCentre> => {\r\n  const searchParams = getSearchParamsFromSearchPhrase(searchPhrase);\r\n\r\n  const centresByCategory = searchParams.categoryKey ?\r\n    welfareCentres.filter((centre: WelfareCentre) => containsServiceCategory(centre.serviceCategories.value, searchParams.categoryKey)) :\r\n    welfareCentres;\r\n\r\n  if (searchParams.fullText) {\r\n    const fuseOptions: Fuse.FuseOptions<WelfareCentre> = {\r\n      keys: [\r\n        'name.value',\r\n        'city.value',\r\n      ],\r\n      maxPatternLength: MaxSearchPatternLength,\r\n      threshold: 0.2,\r\n    };\r\n    const fuse = new Fuse(centresByCategory, fuseOptions);\r\n    const centresByFullText = fuse.search(searchParams.fullText);\r\n\r\n    return centresByFullText;\r\n  }\r\n\r\n  return centresByCategory;\r\n};\r\n\r\nexport const getSearchParamsFromSearchPhrase = (searchPhrase: string): ISearchParams => {\r\n  let categoryKey = null;\r\n  let fullText = searchPhrase;\r\n\r\n  ServiceCategoryMap.forEach((value: string, key: string) => {\r\n    if (searchPhrase.startsWith(value)) {\r\n      categoryKey = key;\r\n    }\r\n  });\r\n\r\n  if (categoryKey) {\r\n    const categoryValue = ServiceCategoryMap.get(categoryKey);\r\n    fullText = fullText.replace(categoryValue, '');\r\n  }\r\n\r\n  return {\r\n    categoryKey,\r\n    fullText,\r\n  };\r\n};\r\n\r\nconst containsServiceCategory = (serviceCategories: Array<IServiceCategory>, key: string): boolean => {\r\n  return serviceCategories.some((category: IServiceCategory) => category.codename === key);\r\n};\r\n\r\nexport const getWelfareCentresWithinBounds = (\r\n  welfareCentres: Array<WelfareCentre>,\r\n  bounds: google.maps.LatLngBounds\r\n): Array<WelfareCentre> => {\r\n  return welfareCentres.filter((centre: WelfareCentre) =>\r\n    bounds.contains({lat: centre.gpsLatitude.value, lng: centre.gpsLongitude.value})\r\n  );\r\n};\r\n","import React, { PureComponent } from 'react';\r\nimport { GoogleMap } from 'react-google-maps';\r\nimport MarkerClusterer from 'react-google-maps/lib/components/addons/MarkerClusterer';\r\nimport {\r\n  ClustererGridSize,\r\n  DefaultCenter,\r\n  ZoomForCurrentLocation,\r\n  DefaultZoom,\r\n  MarkerLabelsZoomThreshold\r\n} from '../constants/mapConfig';\r\nimport { WelfareCentre } from '../models/WelfareCentre';\r\nimport { CustomMarker } from './CustomMarker';\r\nimport './Map.css';\r\nimport { getWelfareCentresWithinBounds } from '../utils/searchUtils';\r\n\r\nexport interface IMapStateProps {\r\n  readonly welfareCentres: Array<WelfareCentre>;\r\n}\r\n\r\nexport interface IMapDispatchProps {\r\n  readonly onWelfareCentreSelected: (id: string) => Promise<void>;\r\n}\r\n\r\nexport interface IMapState {\r\n  readonly currentLocation?: LatLng;\r\n  readonly currentZoom: number;\r\n}\r\n\r\ntype MapProps =\r\n  IMapStateProps &\r\n  IMapDispatchProps;\r\n\r\nexport class Map extends PureComponent<MapProps, IMapState> {\r\n  static displayName = 'Map';\r\n\r\n  private _mapComponent: GoogleMap = null;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentLocation: DefaultCenter,\r\n      currentZoom: DefaultZoom,\r\n    };\r\n  }\r\n\r\n  private _onMarkerClick = (id: string, latLng: google.maps.LatLng): void => {\r\n    this.props.onWelfareCentreSelected(id);\r\n    this._mapComponent.panTo(latLng);\r\n  };\r\n\r\n  private _onZoomChanged = (): void => {\r\n    this.setState(() => ({\r\n      currentZoom: this._mapComponent.getZoom(),\r\n    }));\r\n  };\r\n\r\n  private _tryGetCurrentLocation(): void {\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition(\r\n        position => {\r\n          this.setState(() => ({\r\n            currentLocation: { lat: position.coords.latitude, lng: position.coords.longitude },\r\n            currentZoom: ZoomForCurrentLocation,\r\n          }));\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  private _fitBoundsToVisibleMarkers = (welfareCentres: Array<WelfareCentre>): void => {\r\n    const bounds = new google.maps.LatLngBounds();\r\n    welfareCentres.forEach((centre: WelfareCentre) => {\r\n      const loc = new google.maps.LatLng(centre.gpsLatitude.value, centre.gpsLongitude.value);\r\n      bounds.extend(loc);\r\n    })\r\n    this._mapComponent.fitBounds(bounds);\r\n  };\r\n\r\n  componentDidMount(): void {\r\n    this._tryGetCurrentLocation();\r\n  }\r\n\r\n  componentDidUpdate(prevProps: IMapStateProps): void {\r\n    const welfareCentres = this.props.welfareCentres;\r\n    if (welfareCentres !== prevProps.welfareCentres && welfareCentres.length > 0) {\r\n      const centresInCurrentLocation =\r\n        this.state.currentLocation &&\r\n        getWelfareCentresWithinBounds(welfareCentres, this._mapComponent.getBounds());\r\n\r\n      const centresToZoom = centresInCurrentLocation.length > 1 ? centresInCurrentLocation : welfareCentres;\r\n      this._fitBoundsToVisibleMarkers(centresToZoom);\r\n    }\r\n  }\r\n\r\n  render(): JSX.Element {\r\n    const {\r\n      welfareCentres,\r\n    } = this.props;\r\n    const {\r\n      currentZoom,\r\n      currentLocation,\r\n    } = this.state;\r\n\r\n    return (\r\n      <GoogleMap\r\n        center={currentLocation}\r\n        defaultCenter={DefaultCenter}\r\n        defaultZoom={DefaultZoom}\r\n        onZoomChanged={this._onZoomChanged}\r\n        options={{\r\n          fullscreenControl: false,\r\n          mapTypeControlOptions: {\r\n            position: google.maps.ControlPosition.TOP_RIGHT,\r\n          },\r\n          maxZoom: 18,\r\n        }}\r\n        ref={c => this._mapComponent = c}\r\n        zoom={currentZoom}\r\n      >\r\n        {welfareCentres && (\r\n          <MarkerClusterer\r\n            averageCenter\r\n            enableRetinaIcons\r\n            gridSize={ClustererGridSize}\r\n          >\r\n            {welfareCentres.map((centre: WelfareCentre) =>\r\n              <CustomMarker\r\n                id={centre.system.codename}\r\n                key={centre.system.codename}\r\n                latLng={{lat: centre.gpsLatitude.value, lng: centre.gpsLongitude.value}}\r\n                name={centre.name.value}\r\n                onClick={this._onMarkerClick}\r\n                showLabels={currentZoom > MarkerLabelsZoomThreshold}\r\n              />\r\n            )}\r\n          </MarkerClusterer>\r\n        )}\r\n      </GoogleMap>\r\n    );\r\n  }\r\n}\r\n","export const App_Init_Finished = 'App_Init_Finished';\r\nexport const App_Search_Confirmed = 'App_Search_Confirmed';\r\nexport const App_Search_Focused = 'App_Search_Focused';\r\nexport const App_WelfareCentre_Selected = 'App_WelfareCentre_Selected';\r\n","import { ContentItem, Fields } from 'kentico-cloud-delivery';\r\n\r\nexport class WelfareCentre extends ContentItem {\r\n  public name: Fields.TextField;\r\n  public serviceCategories: Fields.MultipleChoiceField;\r\n  public serviceDescription: Fields.RichTextField;\r\n  public openingHours: Fields.RichTextField;\r\n  public street: Fields.TextField;\r\n  public city: Fields.TextField;\r\n  public zip: Fields.TextField;\r\n  public gpsLatitude: Fields.NumberField;\r\n  public gpsLongitude: Fields.NumberField\r\n  public phone: Fields.TextField;\r\n  public web: Fields.TextField;\r\n\r\n  constructor(){\r\n    super({\r\n      propertyResolver: ((fieldName: string) => {\r\n        if (fieldName === \"service_categories\"){\r\n          return \"serviceCategories\";\r\n        }\r\n        if (fieldName === \"service_description\"){\r\n          return \"serviceDescription\";\r\n        }\r\n        if (fieldName === \"opening_hours\"){\r\n          return \"openingHours\";\r\n        }\r\n        if (fieldName === \"gps_latitude\"){\r\n          return \"gpsLatitude\";\r\n        }\r\n        if (fieldName === \"gps_longitude\"){\r\n          return \"gpsLongitude\";\r\n        }\r\n        return fieldName;\r\n      })\r\n    })\r\n  }\r\n}\r\n","import { DeliveryClient, TypeResolver } from \"kentico-cloud-delivery\";\r\nimport { WelfareCentre } from \"../models/WelfareCentre\";\r\nimport {KenticoProjectId} from \"../constants/config\";\r\n\r\nexport const deliveryClient = new DeliveryClient({\r\n  projectId: KenticoProjectId,\r\n  typeResolvers: [\r\n    new TypeResolver(\"welfare_centre\", () => new WelfareCentre)\r\n  ]\r\n});\r\n","import {IWelfareCentreRepository} from \"./interfaces/IWelfareCentreRepository\";\r\nimport {WelfareCentre} from \"../models/WelfareCentre\";\r\nimport {deliveryClient} from \"../kentico/deliveryClient\";\r\nimport {ItemResponses} from 'kentico-cloud-delivery';\r\n\r\nexport const welfareCentreRepository: IWelfareCentreRepository = {\r\n  getAll(): Promise<ItemResponses.DeliveryItemListingResponse<WelfareCentre>> {\r\n    return deliveryClient.items<WelfareCentre>()\r\n      .type('welfare_centre')\r\n      .elementsParameter(['name', 'service_categories', 'city', 'gps_latitude', 'gps_longitude'])\r\n      .getPromise();\r\n  },\r\n\r\n  getById(id: string): Promise<ItemResponses.DeliveryItemResponse<WelfareCentre>> {\r\n    return deliveryClient.item<WelfareCentre>(id)\r\n      .getPromise();\r\n  }\r\n}\r\n","import { createAppInitAction } from './thunks/appInit';\r\nimport { createSearchConfirmedAction } from './thunks/searchConfirmed';\r\nimport { createSelectWelfareCentreAction } from './thunks/selectWelfareCentre';\r\n\r\nexport const appInit = createAppInitAction();\r\nexport const searchConfirmed = createSearchConfirmedAction();\r\nexport const selectWelfareCentre = createSelectWelfareCentreAction();\r\n","import { Action, Dispatch, ThunkPromise} from '../../@types/Dispatcher';\r\nimport {App_Init_Finished } from '../../constants/actionTypes';\r\nimport { WelfareCentre } from '../../models/WelfareCentre';\r\nimport { welfareCentreRepository } from '../../repositories/welfareCentreRepository';\r\n\r\ninterface IAppInitFinishedPayload {\r\n  readonly loadedWelfareCentres: Array<WelfareCentre>;\r\n}\r\n\r\nconst appInitFinished = (payload: IAppInitFinishedPayload): Action => ({\r\n  type: App_Init_Finished,\r\n  payload,\r\n});\r\n\r\nexport const createAppInitAction = () =>\r\n  (): ThunkPromise =>\r\n    async (dispatch: Dispatch) => {\r\n      const welfareCentres = await welfareCentreRepository.getAll();\r\n      dispatch(appInitFinished({\r\n        loadedWelfareCentres: welfareCentres.items,\r\n      }));\r\n    };\r\n","import { App_Search_Confirmed } from '../../constants/actionTypes';\r\nimport { Action, Dispatch, ThunkPromise, GetState } from '../../@types/Dispatcher';\r\nimport { IStore } from '../../stores/IStore';\r\nimport { WelfareCentre } from '../../models/WelfareCentre';\r\nimport { filterWelfareCentres } from '../../utils/searchUtils';\r\n\r\ninterface ISearchConfirmedPayload {\r\n  readonly filteredWelfareCentres: Array<WelfareCentre>;\r\n}\r\n\r\nconst searchConfirmed = (payload: ISearchConfirmedPayload): Action => ({\r\n  type: App_Search_Confirmed,\r\n  payload,\r\n});\r\n\r\nexport const createSearchConfirmedAction = () =>\r\n  (searchPhrase: string): ThunkPromise =>\r\n    async (dispatch: Dispatch, getState: GetState<IStore>) => {\r\n      const {\r\n        loadedWelfareCentres,\r\n      } = getState();\r\n\r\n      const filteredWelfareCentres = filterWelfareCentres(loadedWelfareCentres, searchPhrase);\r\n      dispatch(searchConfirmed({ filteredWelfareCentres }));\r\n    };\r\n","import { WelfareCentre } from '../../models/WelfareCentre';\r\nimport { Action, Dispatch, GetState, ThunkPromise } from '../../@types/Dispatcher';\r\nimport { App_WelfareCentre_Selected } from '../../constants/actionTypes';\r\nimport { IStore } from '../../stores/IStore';\r\nimport { welfareCentreRepository } from '../../repositories/welfareCentreRepository';\r\n\r\ninterface IWelfareCentreSelectedPayload {\r\n  readonly selectedWelfareCentre: WelfareCentre;\r\n}\r\n\r\nconst welfareCentreSelected = (payload: IWelfareCentreSelectedPayload): Action => ({\r\n  type: App_WelfareCentre_Selected,\r\n  payload,\r\n});\r\n\r\nexport const createSelectWelfareCentreAction = () =>\r\n  (id: string): ThunkPromise =>\r\n    async (dispatch: Dispatch, getState: GetState<IStore>) => {\r\n      const {\r\n        selectedWelfareCentre,\r\n      } = getState();\r\n\r\n      const selectionChanged = !selectedWelfareCentre || selectedWelfareCentre.system.codename != id;\r\n      if (selectionChanged) {\r\n        const welfareCentre = await welfareCentreRepository.getById(id);\r\n        dispatch(welfareCentreSelected({selectedWelfareCentre: welfareCentre.item}));\r\n      }\r\n    };\r\n","import {IStore} from '../stores/IStore';\r\nimport {\r\n  IMapDispatchProps,\r\n  IMapStateProps,\r\n  Map as MapComponent\r\n} from '../components/Map';\r\nimport { ComponentClass } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withGoogleMap, withScriptjs } from 'react-google-maps';\r\nimport { WithGoogleMapProps } from 'react-google-maps/lib/withGoogleMap';\r\nimport { WithScriptjsProps } from 'react-google-maps/lib/withScriptjs';\r\nimport { Dispatch } from '../@types/Dispatcher';\r\nimport { selectWelfareCentre } from '../actions/thunkActions';\r\n\r\nexport interface IMapContainerProps extends\r\n  WithGoogleMapProps,\r\n  WithScriptjsProps {\r\n}\r\n\r\nconst mapStateToProps = (state: IStore): IMapStateProps => ({\r\n  welfareCentres: state.filteredWelfareCentres,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): IMapDispatchProps => ({\r\n  onWelfareCentreSelected: (id: string) => dispatch(selectWelfareCentre(id)),\r\n});\r\n\r\nexport const Map: ComponentClass<IMapContainerProps> = withScriptjs(withGoogleMap(connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(MapComponent)));\r\n","const doNothing = () => { /* do nothing*/\r\n};\r\n\r\nexport interface ICancelablePromise<T = void> extends Promise<T> {\r\n  then: <TResult1 = T, TResult2 = never>(\r\n    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,\r\n    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null) =>\r\n    ICancelablePromise<TResult1 | TResult2>;\r\n  cancel: () => void;\r\n}\r\n\r\nexport class CancelledDelay {\r\n}\r\n\r\ntype PromiseCallback<T = unknown> = ((value: T) => T) | null | undefined;\r\n\r\nfunction cancelable<T>(thePromise: Promise<T>, timeout: number, rejectCallback: (reason: unknown) => unknown): ICancelablePromise<T> {\r\n  const originalThen = thePromise.then;\r\n\r\n  return Object.assign(thePromise, {\r\n    cancel() {\r\n      clearTimeout(timeout);\r\n      rejectCallback(new CancelledDelay());\r\n    },\r\n    then(success: PromiseCallback<T>, fail: PromiseCallback) {\r\n      return cancelable(originalThen.call(thePromise, success, fail), timeout, rejectCallback);\r\n    },\r\n  });\r\n}\r\n\r\nexport function delay(duration: number): ICancelablePromise<void> {\r\n  let timeout: any = -1;\r\n  let rejectCallback = doNothing;\r\n  const thePromise = new Promise<void>((resolve, reject) => {\r\n    rejectCallback = reject;\r\n    // We can't use window.setTimeout here, because that doesn't work in tests\r\n    timeout = setTimeout(resolve, duration);\r\n  });\r\n\r\n  return cancelable(thePromise, timeout, rejectCallback);\r\n}\r\n\r\nexport const identity = <T>(x: T): T => x;\r\n","import React from 'react';\r\n\r\nexport const renderSvgIcon = (href: string): JSX.Element => {\r\n  const useTag = `<use xlink:href=\\\"${href}\\\" />`;\r\n  return <svg dangerouslySetInnerHTML={{__html: useTag }} />;\r\n}\r\n","import React, { ChangeEvent, Component, FormEvent } from 'react';\r\nimport { debounce, DebouncedFunction } from '../utils/general/debounce';\r\nimport { MaxSearchPatternLength } from '../constants/config';\r\nimport './FullTextSearch.css';\r\nimport icons from '../assets/icons.svg';\r\nimport { renderSvgIcon } from '../utils/renderUtils';\r\n\r\ninterface IFullTextSearchStateProps {\r\n  readonly searchPhrase?: string;\r\n}\r\n\r\ninterface IFullTextSearchCallbackProps {\r\n  readonly onSearchConfirmed: (searchPhrase: string) => void;\r\n  readonly onSearchPhraseChanged: (searchPhrase: string) => void;\r\n}\r\n\r\ninterface IFullTextSearchState {\r\n  readonly searchPhrase: string;\r\n}\r\n\r\ntype FullTextSearchProps =\r\n  IFullTextSearchStateProps &\r\n  IFullTextSearchCallbackProps;\r\n\r\nexport class FullTextSearch extends Component<FullTextSearchProps, IFullTextSearchState> {\r\n  static displayName = 'FullTextSearch';\r\n\r\n  private readonly _debouncedOnSearchPhraseChanged: DebouncedFunction;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this._debouncedOnSearchPhraseChanged = debounce(props.onSearchPhraseChanged, 500);\r\n\r\n    this.state = {\r\n      searchPhrase: props.searchPhrase || '',\r\n    };\r\n  }\r\n\r\n  componentDidUpdate(prevProps: FullTextSearchProps, prevState: IFullTextSearchState): void {\r\n    const propsChanged = this.props.searchPhrase !== prevProps.searchPhrase;\r\n    const stateChanged = this.state.searchPhrase !== prevState.searchPhrase;\r\n    const propsStateSynced = this.props.searchPhrase === this.state.searchPhrase;\r\n\r\n    if (propsChanged || (!propsStateSynced && !stateChanged)) {\r\n      this.setState(() => ({\r\n        searchPhrase: this.props.searchPhrase,\r\n      }));\r\n      this.props.onSearchConfirmed(this.props.searchPhrase);\r\n    }\r\n  }\r\n\r\n  componentWillUnmount(): void {\r\n    this._debouncedOnSearchPhraseChanged.cancel();\r\n  }\r\n\r\n  private _onChange(value: string): void {\r\n    this.setState({\r\n      searchPhrase: value,\r\n    });\r\n    this._debouncedOnSearchPhraseChanged(value);\r\n  }\r\n\r\n  private _onInputChange = (e: ChangeEvent<HTMLInputElement>): void => {\r\n    this._onChange(e.target.value);\r\n  };\r\n\r\n  private _onClearButtonClicked = (): void => {\r\n    this._onChange('');\r\n  };\r\n\r\n  private _onFormSubmit = (event: FormEvent<HTMLFormElement>): void => {\r\n    this._debouncedOnSearchPhraseChanged.cancel();\r\n    this.props.onSearchConfirmed(this.state.searchPhrase);\r\n    event.preventDefault();\r\n  };\r\n\r\n  render(): JSX.Element {\r\n    return (\r\n      <div className=\"fulltext\">\r\n        <form\r\n          onSubmit={this._onFormSubmit}\r\n        >\r\n          <div className=\"fulltext__inputs\">\r\n            <input\r\n              className=\"fulltext__input-text\"\r\n              maxLength={MaxSearchPatternLength}\r\n              onChange={this._onInputChange}\r\n              placeholder=\"Hledat...\"\r\n              tabIndex={1}\r\n              type=\"text\"\r\n              value={this.state.searchPhrase}\r\n            />\r\n            <label className=\"fulltext__button-search\" tabIndex={2}>\r\n              {renderSvgIcon(icons + '#magnifying-glass')}\r\n              <input\r\n                type=\"submit\"\r\n              />\r\n            </label>\r\n            <label className=\"fulltext__button-clear\" tabIndex={3}>\r\n              {renderSvgIcon(icons + '#close')}\r\n              <input\r\n                onClick={this._onClearButtonClicked}\r\n                type=\"button\"\r\n              />\r\n            </label>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","// Returns a function, that, as long as it continues to be invoked, will not\r\n// be triggered. The function will be called after it stops being called for\r\n// N milliseconds. If `immediate` is passed, trigger the function on the\r\n// leading edge, instead of the trailing.\r\nimport {\r\n  delay,\r\n  ICancelablePromise,\r\n} from './generalUtilities';\r\n\r\ntype Now<T> = () => T | undefined;\r\n\r\nexport type TypedDebouncedFunction<T> = {\r\n  readonly now: Now<T>;\r\n  readonly cancel: () => void;\r\n  readonly isPending: () => boolean;\r\n  (..._args: any[]): {\r\n    readonly now: Now<T>;\r\n  };\r\n};\r\n\r\nexport type DebouncedFunction = TypedDebouncedFunction<void>;\r\n\r\nexport function debounce<T>(func: (...args: unknown[]) => T, wait: number): TypedDebouncedFunction<T> {\r\n  let timeout: ICancelablePromise<T | undefined> | null;\r\n  let args: unknown[];\r\n  let context: unknown;\r\n  let later: () => T | undefined;\r\n\r\n  // Has to be 'function' because of execution context.\r\n  const res = function (this: any, ...latestArgs: unknown[]): { readonly now: Now<T> } {\r\n    context = this;\r\n    args = latestArgs;\r\n    later = (): T | undefined => {\r\n      timeout = null;\r\n      return func.apply(context, args);\r\n    };\r\n\r\n    if (timeout) {\r\n      timeout.cancel();\r\n      timeout = null;\r\n    }\r\n\r\n    timeout = delay(wait).then(later);\r\n\r\n    return {\r\n      now: (): T | undefined => {\r\n        if (timeout) {\r\n          timeout.cancel();\r\n          timeout = null;\r\n          return func.apply(context, args);\r\n        }\r\n        else {\r\n          return undefined;\r\n        }\r\n      },\r\n    };\r\n  };\r\n\r\n  return Object.assign(res, {\r\n    now: (): T | undefined => {\r\n      if (timeout) {\r\n        timeout.cancel();\r\n        timeout = null;\r\n        return later();\r\n      }\r\n      return undefined;\r\n    },\r\n    cancel: (): void => {\r\n      if (timeout) {\r\n        timeout.cancel();\r\n        timeout = null;\r\n      }\r\n    },\r\n    isPending: (): boolean => {\r\n      return !!timeout;\r\n    },\r\n  });\r\n}\r\n","import React, {Component} from 'react';\r\nimport { ServiceCategoryMap } from '../models/ServiceCategoryMap';\r\nimport './CategorySearch.css';\r\nimport icons from '../assets/icons.svg';\r\nimport { renderSvgIcon } from '../utils/renderUtils';\r\n\r\nexport interface ICategorySearchCallbackProps {\r\n  readonly onCategorySelected: (key: string) => void;\r\n}\r\n\r\ntype CategorySearchProps = ICategorySearchCallbackProps;\r\n\r\nexport class CategorySearch extends Component<CategorySearchProps> {\r\n  static displayName = 'CategorySearch';\r\n\r\n  private _renderCategories(): Array<JSX.Element> {\r\n    const categories = Array();\r\n    ServiceCategoryMap.forEach((value, key) =>\r\n      categories.push(\r\n        <li\r\n          className=\"category-search__category\"\r\n          key={key}\r\n          onClick={() => this.props.onCategorySelected(key)}\r\n        >\r\n          <span className=\"category-search__category-icon\">\r\n            {renderSvgIcon(icons + '#' + key)}\r\n          </span>\r\n          {value}\r\n        </li>\r\n      )\r\n    );\r\n    return categories;\r\n  }\r\n\r\n  render(): JSX.Element {\r\n    return (\r\n      <ul className=\"category-search\">\r\n        {this._renderCategories()}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n","import { ServiceCategoryMap } from '../models/ServiceCategoryMap';\r\n\r\nexport const getCategoryNameForKey = (key: string): string | undefined => {\r\n  return ServiceCategoryMap.get(key);\r\n};\r\n\r\n","import React, { Component } from 'react';\r\nimport { FullTextSearch } from './FullTextSearch';\r\nimport { CategorySearch } from './CategorySearch';\r\nimport { getCategoryNameForKey } from '../utils/categoryUtils';\r\nimport { Action, ThunkPromise } from '../@types/Dispatcher';\r\n\r\nexport interface ISearchStateProps {\r\n  readonly selectedWelfareCentreName?: string;\r\n}\r\n\r\nexport interface ISearchState {\r\n  readonly selectedCategoryKey?: string;\r\n}\r\n\r\nexport interface ISearchDispatchProps {\r\n  readonly onFocus: () => void;\r\n  readonly onSearch: (searchPhrase: string) => Promise<void>;\r\n}\r\n\r\ntype SearchProps =\r\n  ISearchStateProps &\r\n  ISearchDispatchProps;\r\n\r\nexport class Search extends Component<SearchProps, ISearchState> {\r\n  static displayName = 'Search';\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  private _onCategorySelected = (key: string) => {\r\n    this.setState(() => ({\r\n      selectedCategoryKey: key,\r\n    }));\r\n  };\r\n\r\n  render(): JSX.Element {\r\n    const {\r\n      selectedWelfareCentreName,\r\n    } = this.props;\r\n\r\n    const translatedSearchPhrase = getCategoryNameForKey(this.state.selectedCategoryKey);\r\n\r\n    return (\r\n      <div\r\n        className=\"search\"\r\n        onFocus={this.props.onFocus}\r\n      >\r\n        <FullTextSearch\r\n          searchPhrase={translatedSearchPhrase}\r\n          onSearchConfirmed={this.props.onSearch}\r\n          onSearchPhraseChanged={() => true}\r\n        />\r\n        {!selectedWelfareCentreName && (\r\n          <CategorySearch\r\n            onCategorySelected={this._onCategorySelected}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import { Action } from '../@types/Dispatcher';\r\nimport { App_Search_Focused } from '../constants/actionTypes';\r\n\r\nexport const searchFocused = (): Action => ({\r\n  type: App_Search_Focused,\r\n});\r\n","import { Dispatch } from '../@types/Dispatcher';\r\nimport { ComponentClass } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  ISearchDispatchProps, ISearchStateProps,\r\n  Search as SearchComponent,\r\n} from '../components/Search';\r\nimport { searchConfirmed } from '../actions/thunkActions';\r\nimport { IStore } from '../stores/IStore';\r\nimport { searchFocused } from '../actions/searchFocused';\r\n\r\nexport interface ISearchContainerProps {\r\n}\r\n\r\nconst mapStateToProps = (state: IStore): ISearchStateProps => ({\r\n  selectedWelfareCentreName: state.selectedWelfareCentre ? state.selectedWelfareCentre.name.value : undefined,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): ISearchDispatchProps => ({\r\n  onFocus: () => dispatch(searchFocused()),\r\n  onSearch: (searchPhrase) => dispatch(searchConfirmed(searchPhrase)),\r\n});\r\n\r\nexport const Search: ComponentClass<ISearchContainerProps> = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(SearchComponent);\r\n","export const stripHtml = (htmlString: string): string => htmlString.replace(/<[^>]+>/g, '');\r\n\r\nexport const isEmptyOrWhitespace = (value: string | null | undefined): boolean => !value || !value.trim().length;\r\n","import React, { Component } from 'react';\r\nimport { WelfareCentre } from '../models/WelfareCentre';\r\nimport { GoogleStreetViewMetadataUrl, GoogleStreetViewUrl } from '../constants/mapConfig';\r\nimport './WelfareCentreDetails.css';\r\nimport { isEmptyOrWhitespace, stripHtml } from '../utils/general/textUtils';\r\nimport { ensureUrlHttpProtocol } from '../utils/general/urlUtils';\r\nimport { ajax, AjaxResponse } from 'rxjs/ajax';\r\nimport streetViewNotFound from '../assets/streetview-not-found.png';\r\n\r\nexport interface IWelfareCentreDetailsStateProps {\r\n  readonly welfareCentre: WelfareCentre;\r\n}\r\n\r\nexport interface IWelfareCentreDetailsState {\r\n  readonly streetViewImageUrl?: string;\r\n}\r\n\r\ntype WelfareCentreDetailsProps = IWelfareCentreDetailsStateProps;\r\n\r\nexport class WelfareCentreDetails extends Component<WelfareCentreDetailsProps, IWelfareCentreDetailsState> {\r\n  static displayName = 'WelfareCentreDetails';\r\n\r\n  constructor(props: WelfareCentreDetailsProps) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  private _tryLoadStreetViewImage = (): void => {\r\n    const {\r\n      welfareCentre,\r\n    } = this.props;\r\n\r\n    const street = welfareCentre.street.value;\r\n    const city = welfareCentre.city.value;\r\n\r\n    const encodedLocation = encodeURI(`${street}, ${city}`);\r\n    const streetViewMetadataUrl = `${GoogleStreetViewMetadataUrl}&location=${encodedLocation}&size=390x200`;\r\n    const streetViewImageUrl = `${GoogleStreetViewUrl}&location=${encodedLocation}&size=390x200`;\r\n\r\n    ajax.get(streetViewMetadataUrl)\r\n      .subscribe((response: AjaxResponse) => {\r\n        this.setState(() => ({\r\n          streetViewImageUrl: response.response.status !== 'ZERO_RESULTS' ? streetViewImageUrl : undefined,\r\n        }));\r\n      });\r\n  };\r\n\r\n  componentDidMount(): void {\r\n    this._tryLoadStreetViewImage();\r\n  }\r\n\r\n  componentDidUpdate(prevProps: WelfareCentreDetailsProps): void {\r\n    if (prevProps.welfareCentre !== this.props.welfareCentre) {\r\n      this._tryLoadStreetViewImage();\r\n    }\r\n  }\r\n\r\n  render(): JSX.Element {\r\n    const {\r\n      welfareCentre,\r\n    } = this.props;\r\n    const {\r\n      streetViewImageUrl,\r\n    } = this.state;\r\n\r\n    const name = welfareCentre.name.value;\r\n    const street = welfareCentre.street.value;\r\n    const city = welfareCentre.city.value;\r\n    const zip = welfareCentre.zip.value;\r\n    const openingHours = welfareCentre.openingHours.value;\r\n    const description = welfareCentre.serviceDescription.value;\r\n    const phone = welfareCentre.phone.value;\r\n    const web = welfareCentre.web.value;\r\n\r\n    return (\r\n      <div className=\"welfare-details\">\r\n        <img src={streetViewImageUrl || streetViewNotFound} alt={street} />\r\n        <h2 className=\"welfare-details__title\">{name}</h2>\r\n\r\n        {!isEmptyOrWhitespace(stripHtml(description)) && (\r\n          <div\r\n            className=\"welfare-details__block welfare-details__block--description\"\r\n          >\r\n            <div dangerouslySetInnerHTML={{__html: welfareCentre.serviceDescription.getHtml()}} />\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"welfare-details__block welfare-details__block--address\">\r\n          <p>{street}</p>\r\n          <p>{zip} {city}</p>\r\n        </div>\r\n\r\n        {!isEmptyOrWhitespace(stripHtml(openingHours)) && (\r\n          <div\r\n            className=\"welfare-details__block welfare-details__block--opening-hours\"\r\n          >\r\n            <p className=\"welfare-details__block-title\">Otevírací doba</p>\r\n            <div dangerouslySetInnerHTML={{__html: welfareCentre.openingHours.getHtml()}} />\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"welfare-details__block welfare-details__block--contacts\">\r\n          <p>{!isEmptyOrWhitespace(phone) && `Tel: ${phone}`}</p>\r\n          <p>\r\n            {!isEmptyOrWhitespace(web) && (\r\n              <a href={ensureUrlHttpProtocol(web)} target=\"_blank\">{web}</a>\r\n            )}\r\n          </p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","export const startsWithProtocol = (url: string) => /^http(s)?:\\/\\//i.test(url);\r\n\r\nexport const ensureUrlHttpProtocol = (url: string) => startsWithProtocol(url) ? url : `http://${url}`;\r\n","import React, { Component } from 'react';\r\nimport './SideBar.css';\r\nimport { Search } from '../containers/Search';\r\nimport { WelfareCentre } from '../models/WelfareCentre';\r\nimport { WelfareCentreDetails } from './WelfareCentreDetails';\r\n\r\nexport interface ISideBarStateProps {\r\n  readonly selectedWelfareCentre: WelfareCentre | null;\r\n}\r\n\r\ntype SideBarProps = ISideBarStateProps;\r\n\r\nexport class SideBar extends Component<SideBarProps> {\r\n  static displayName = 'SideBar';\r\n\r\n  render(): JSX.Element {\r\n    const {\r\n      selectedWelfareCentre,\r\n    } = this.props;\r\n\r\n    return (\r\n      <div className=\"sidebar\">\r\n        <Search />\r\n        {selectedWelfareCentre && (\r\n          <WelfareCentreDetails welfareCentre={selectedWelfareCentre}/>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import { IStore } from \"../stores/IStore\";\r\nimport {\r\n  ISideBarStateProps,\r\n  SideBar as SideBarComponent\r\n} from '../components/SideBar';\r\nimport { ComponentClass } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nexport interface ISideBarContainerProps {\r\n}\r\n\r\nconst mapStateToProps = (state: IStore, ownProps: ISideBarContainerProps): ISideBarStateProps => {\r\n  return {\r\n    selectedWelfareCentre: state.selectedWelfareCentre,\r\n  };\r\n};\r\n\r\nexport const SideBar: ComponentClass<ISideBarContainerProps> = connect(\r\n  mapStateToProps,\r\n)(SideBarComponent);\r\n","import React, { Component } from 'react';\r\nimport { Map } from '../containers/Map';\r\nimport './App.css';\r\nimport { GoogleMapsUrl } from '../constants/mapConfig';\r\nimport { SideBar } from '../containers/SideBar';\r\n\r\nexport interface IAppDispatchProps {\r\n  readonly onInit: () => Promise<void>;\r\n}\r\n\r\ntype AppProps = IAppDispatchProps;\r\n\r\nexport class App extends Component<AppProps> {\r\n  componentDidMount(): void {\r\n    this.props.onInit();\r\n  }\r\n\r\n  render(): JSX.Element {\r\n    return (\r\n      <div className=\"app\">\r\n        <SideBar />\r\n        <Map\r\n          googleMapURL={GoogleMapsUrl}\r\n          loadingElement={<div style={{ height: `100%` }} />}\r\n          containerElement={<div style={{ height: `100%` }} />}\r\n          mapElement={<div style={{ height: `100%` }} />}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import {\r\n  App as AppComponent,\r\n  IAppDispatchProps\r\n} from '../components/App';\r\nimport { Dispatch } from '../@types/Dispatcher';\r\nimport { appInit } from '../actions/thunkActions';\r\nimport { connect } from 'react-redux';\r\nimport { ComponentClass } from 'react';\r\n\r\nexport interface IAppContainerProps {\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): IAppDispatchProps => ({\r\n  onInit: () => dispatch(appInit()),\r\n});\r\n\r\nexport const App: ComponentClass<IAppContainerProps> = connect(\r\n  null,\r\n  mapDispatchToProps,\r\n)(AppComponent);\r\n","import { IStore } from './IStore';\r\n\r\nexport const initialState: IStore = {\r\n  filteredWelfareCentres: [],\r\n  loadedWelfareCentres: [],\r\n  selectedWelfareCentre: null,\r\n}\r\n","import { IStore } from '../stores/IStore';\r\nimport { combineReducers } from 'redux';\r\nimport { loadedWelfareCentres } from './loadedWelfareCentres';\r\nimport { filteredWelfareCentres } from './filteredWelfareCentres';\r\nimport { selectedWelfareCentre } from './selectedWelfareCentre';\r\n\r\nexport const rootReducer = combineReducers<IStore>({\r\n  filteredWelfareCentres,\r\n  loadedWelfareCentres,\r\n  selectedWelfareCentre\r\n});\r\n","import { WelfareCentre } from '../models/WelfareCentre';\r\nimport { Action } from '../@types/Dispatcher';\r\nimport { initialState } from '../stores/initialState';\r\nimport { App_Search_Confirmed } from '../constants/actionTypes';\r\n\r\nexport function filteredWelfareCentres(\r\n  state = initialState.filteredWelfareCentres,\r\n  action: Action,\r\n): Array<WelfareCentre> {\r\n  switch (action.type) {\r\n    case App_Search_Confirmed:\r\n      return action.payload.filteredWelfareCentres;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { WelfareCentre } from '../models/WelfareCentre';\r\nimport { App_Init_Finished } from '../constants/actionTypes';\r\nimport { Action } from '../@types/Dispatcher';\r\nimport { initialState } from '../stores/initialState';\r\n\r\nexport function loadedWelfareCentres(\r\n  state = initialState.loadedWelfareCentres,\r\n  action: Action,\r\n): Array<WelfareCentre> {\r\n  switch (action.type) {\r\n    case App_Init_Finished:\r\n      return action.payload.loadedWelfareCentres;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { initialState } from '../stores/initialState';\r\nimport { Action } from '../@types/Dispatcher';\r\nimport { App_Search_Confirmed, App_Search_Focused, App_WelfareCentre_Selected } from '../constants/actionTypes';\r\nimport { WelfareCentre } from '../models/WelfareCentre';\r\n\r\nexport function selectedWelfareCentre(\r\n  state = initialState.selectedWelfareCentre,\r\n  action: Action,\r\n): WelfareCentre {\r\n  switch (action.type) {\r\n    case App_WelfareCentre_Selected:\r\n      return action.payload.selectedWelfareCentre;\r\n    case App_Search_Focused:\r\n      return null;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { CancelledDelay } from './generalUtilities';\r\nimport RSVP from 'rsvp';\r\n\r\nexport function bootstrapPromises(): void {\r\n// Handles uncaught error within promises\r\n  (window as any).Promise = RSVP.Promise;\r\n  RSVP.on('error', (reason) => {\r\n    if (reason) {\r\n      if (!(reason instanceof CancelledDelay)) {\r\n        console.error(reason, reason.stack);\r\n      }\r\n    }\r\n    else {\r\n      console.error('A reasonless uncaught promise error.');\r\n    }\r\n  });\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport { App } from './containers/App';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, Store, applyMiddleware, compose } from 'redux';\r\nimport { bootstrapPromises } from './utils/general/bootstrap';\r\nimport thunk from 'redux-thunk';\r\nimport { IStore } from './stores/IStore';\r\nimport { rootReducer } from './reducers/rootReducer';\r\n\r\nbootstrapPromises();\r\n\r\nconst composeEnhancers =\r\n  typeof window === 'object' &&\r\n  (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\r\n    (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n    }) : compose;\r\n\r\nconst enhancer = composeEnhancers(\r\n  applyMiddleware(thunk),\r\n);\r\n\r\nconst reduxStore: Store<IStore> = createStore(rootReducer, enhancer);\r\n\r\nReactDOM.render(\r\n  <Provider store={reduxStore}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}